<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://localhost:4000</id>
    <title>Rme</title>
    <updated>2020-06-10T15:06:55.054Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="http://localhost:4000"/>
    <link rel="self" href="http://localhost:4000/atom.xml"/>
    <subtitle>Root down，grow upward.</subtitle>
    <logo>http://localhost:4000/images/avatar.png</logo>
    <icon>http://localhost:4000/favicon.ico</icon>
    <rights>All rights reserved 2020, Rme</rights>
    <entry>
        <title type="html"><![CDATA[git commit时出现unable to auto-detect email address错误]]></title>
        <id>http://localhost:4000/post/git-commit-error/</id>
        <link href="http://localhost:4000/post/git-commit-error/">
        </link>
        <updated>2020-06-10T10:53:23.000Z</updated>
        <summary type="html"><![CDATA[<h4 id="问题描述"><strong>问题描述：</strong></h4>
<p>在git commit的时候出现如下报错<br>
</br><br>
*** Please tell me who you are.</p>
<p>Run</p>
<p>  git config --global user.email &quot;you@example.com&quot;<br>
  git config --global user.name &quot;Your Name&quot;</p>
]]></summary>
        <content type="html"><![CDATA[<h4 id="问题描述"><strong>问题描述：</strong></h4>
<p>在git commit的时候出现如下报错<br>
</br><br>
*** Please tell me who you are.</p>
<p>Run</p>
<p>  git config --global user.email &quot;you@example.com&quot;<br>
  git config --global user.name &quot;Your Name&quot;</p>
<!-- more -->
<p>to set your account's default identity.<br>
Omit --global to set the identity only in this repository.</p>
<p>fatal: unable to auto-detect email address (got 'Admin@Username.(none)')<br>
</br></br></p>
<h4 id="解决方案"><strong>解决方案：</strong></h4>
</br>
<ol>
<li>
<p>修改此项目配置（推荐)</p>
<p>使用命令</p>
<pre><code class="language-c#">git config user.name you@example.com
</code></pre>
<pre><code class="language-c#">git config user.email username
</code></pre>
<p>或者</p>
<p>进入项目下的 .git 目录<br>
打开文件 config<br>
在最前面添加一下代码</p>
<pre><code class="language-c#"> [user]
	email=you@example.com
	name=username
</code></pre>
</br>
</br>
</li>
<li>
<p>修改全局配置</p>
<p>使用命令</p>
<pre><code class="language-c#">git config --global user.name you@example.com
</code></pre>
<pre><code class="language-c#">git config --global user.email username
</code></pre>
</li>
</ol>
<p></br></br></p>
<p>​	注：you@example.com 和 username 填写自己的 GitHub 信息<br>
​	    查看本地属性git config --local --list</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[GitHub清除commit记录]]></title>
        <id>http://localhost:4000/post/github-clear-commit-record/</id>
        <link href="http://localhost:4000/post/github-clear-commit-record/">
        </link>
        <updated>2020-06-10T08:53:17.000Z</updated>
        <summary type="html"><![CDATA[<h4 id="问题描述"><strong>问题描述：</strong></h4>
<p>在搭建博客等项目场景下，常常会出现多次commit使得仓库变大（记录了历史版本），GitHub上的commit次数过多，希望清除历史版本保留最新版本的文件，可以考虑用下面的方式重置仓库。</p>
]]></summary>
        <content type="html"><![CDATA[<h4 id="问题描述"><strong>问题描述：</strong></h4>
<p>在搭建博客等项目场景下，常常会出现多次commit使得仓库变大（记录了历史版本），GitHub上的commit次数过多，希望清除历史版本保留最新版本的文件，可以考虑用下面的方式重置仓库。</p>
<!-- more -->
<p><br/><br/></p>
<h4 id="解决方案"><strong>解决方案：</strong></h4>
<ol>
<li>删除本地原来的仓库<br>
来到本地仓库路径下<br>
windows系统下，直接右键删除，Linux系统可使用一下命令</li>
</ol>
<pre><code class="language-c#">sudo rm .git -r
</code></pre>
<ol>
<li>初始化一个新的仓库</li>
</ol>
<pre><code class="language-c#">git init
</code></pre>
<p>username 替换为你的用户名，repo_name替换为原来的仓库名</p>
<pre><code class="language-c#">git remote add origin https://github.com/username/repo_name.git
</code></pre>
<p>查看是否配置成功 (返回fetch、push两条信息，连接和上面配置的相同）</p>
<pre><code class="language-c#">git remote -v
</code></pre>
<ol start="2">
<li>把所有文件重新加入仓库</li>
</ol>
<pre><code class="language-c#">git add --all
</code></pre>
<p>commit注解“reset my repository”可自定义</p>
<pre><code class="language-c#">git commit -am 'reset my repository'
</code></pre>
<p>将文件push到远程仓库</p>
<pre><code class="language-c#">git push -f origin master
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello 小R]]></title>
        <id>http://localhost:4000/post/hello-xiaoR/</id>
        <link href="http://localhost:4000/post/hello-xiaoR/">
        </link>
        <updated>2020-05-29T13:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎来到小R的小站！<br>
😀  大家可以先听听音乐，和看板娘玩玩嗷~</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎来到小R的小站！<br>
😀  大家可以先听听音乐，和看板娘玩玩嗷~</p>
<!-- more -->
<p>👉我的<a href="https://github.com/Ryyyc/">Github</a><br>
<br/></p>
<p>😘听说暑假要来了，给出了好多好多可以要做的事情呢！</p>
<p>（第一件事肯定是玩一把呀，哈哈哈）</p>
<p>🌎 首先是搭建一个小站啦~这样就可以和大家分享自己学习到的知识以及踩的一些坑。</p>
<p>💻然后是学习前端编程，首选是<a href="https://developers.weixin.qq.com/miniprogram/dev/framework/quickstart/">微信小程序</a>，有机会把其他的也学习一下。</p>
<p>💶还有就是继续完成数据库的项目，整出一个比较完整的火车票购票系统，优化性能，要做高并发测试的。涉及到SpringBoot、MongoDB、Redis、NoSQL等等。</p>
<p>📝  <strong>Markdown</strong></p>
<p>……</p>
<p>📋好多要学呀，不不不，小R不立flag了，走到哪一步算哪一步，哈哈哈~</p>
  <br/>
💬  欢迎与我交流呀~
<br/><br/>
  <br/>
🏳️小站还没有正式上线嗷~<br/>
🏁小站建设基于一个年轻的平台@[Gridea](https://gridea.dev/) <br/>
🏴小站主题参考@[HsxyHao](https://github.com/hsxyhao/gridea-theme-next) <br/>
]]></content>
    </entry>
</feed>